name: Release

on:
  push:
    tags:
      - 'v*'

env:
  NODE_VERSION: '18'

jobs:
  # Create GitHub release
  create-release:
    runs-on: ubuntu-latest
    name: Create Release
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      
    steps:
    - uses: actions/checkout@v4
    
    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Detox Tool ${{ steps.get_version.outputs.VERSION }}
        body: |
          ## What's Changed
          
          See [CHANGELOG.md](CHANGELOG.md) for detailed changes.
          
          ## Downloads
          
          - **Windows**: `detox-tool-setup-${{ steps.get_version.outputs.VERSION }}.exe`
          - **macOS**: `detox-tool-${{ steps.get_version.outputs.VERSION }}.dmg`
          - **Linux**: `detox-tool-${{ steps.get_version.outputs.VERSION }}.AppImage`
          
          ## Installation
          
          1. Download the appropriate file for your platform
          2. Run the installer (Windows/macOS) or make executable and run (Linux)
          3. Follow the setup wizard
          
          ## System Requirements
          
          - **Windows**: Windows 10 or later
          - **macOS**: macOS 10.15 (Catalina) or later
          - **Linux**: Modern Linux distribution with GLIBC 2.17+
        draft: false
        prerelease: false

  # Build for multiple platforms
  build:
    needs: create-release
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            arch: x64
          - os: windows-latest
            platform: win32
            arch: x64
          - os: macos-latest
            platform: darwin
            arch: x64
    
    runs-on: ${{ matrix.os }}
    name: Build ${{ matrix.platform }}-${{ matrix.arch }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install backend dependencies
      run: npm ci
    
    - name: Install frontend dependencies
      working-directory: frontend/app
      run: npm ci
    
    - name: Build frontend
      working-directory: frontend/app
      run: npm run build
    
    - name: Build Electron app
      run: npm run build:electron
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload release assets (Windows)
      if: matrix.platform == 'win32'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./dist/detox-tool-setup.exe
        asset_name: detox-tool-setup-${{ github.ref_name }}.exe
        asset_content_type: application/octet-stream
    
    - name: Upload release assets (macOS)
      if: matrix.platform == 'darwin'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./dist/detox-tool.dmg
        asset_name: detox-tool-${{ github.ref_name }}.dmg
        asset_content_type: application/octet-stream
    
    - name: Upload release assets (Linux)
      if: matrix.platform == 'linux'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./dist/detox-tool.AppImage
        asset_name: detox-tool-${{ github.ref_name }}.AppImage
        asset_content_type: application/octet-stream

  # Publish to package registries
  publish:
    needs: [create-release, build]
    runs-on: ubuntu-latest
    name: Publish Packages
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Publish to npm (if public package)
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      continue-on-error: true
    
    - name: Create Homebrew formula (macOS)
      if: runner.os == 'Linux'
      run: |
        # This would update a Homebrew tap repository
        # Implementation depends on whether you want to publish to Homebrew
        echo "Homebrew formula creation would go here"
    
    - name: Update Scoop manifest (Windows)
      if: runner.os == 'Linux'
      run: |
        # This would update a Scoop bucket repository
        # Implementation depends on whether you want to publish to Scoop
        echo "Scoop manifest update would go here"