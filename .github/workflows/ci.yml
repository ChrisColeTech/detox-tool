name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read
  security-events: write
  actions: read

env:
  NODE_VERSION: '18'

jobs:
  # Backend tests
  backend-test:
    runs-on: ubuntu-latest
    name: Backend Tests
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: backend/package.json
    
    - name: Install backend dependencies
      working-directory: backend
      run: npm ci
    
    - name: Run backend tests
      working-directory: backend
      run: npm run test
    
    - name: Run backend linting
      working-directory: backend
      run: npm run lint
      
    - name: Check backend types
      working-directory: backend
      run: npm run typecheck

  # Frontend tests and build (currently placeholder)
  frontend-test:
    runs-on: ubuntu-latest
    name: Frontend Tests & Build
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Check frontend placeholder
      run: |
        echo "Frontend implementation pending - Phase 13+"
        echo "Current focus: Backend Phase 1-12 implementation"
        exit 0

  # Integration tests (currently placeholder)
  integration-test:
    runs-on: ubuntu-latest
    name: Integration Tests
    needs: [backend-test, frontend-test]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: backend/package.json
    
    - name: Install backend dependencies
      working-directory: backend
      run: npm ci
    
    - name: Run backend integration tests
      working-directory: backend
      run: npm run test:integration || echo "Integration tests not yet implemented"

  # Security scanning
  security:
    runs-on: ubuntu-latest
    name: Security Scan
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  # Code quality analysis
  quality:
    runs-on: ubuntu-latest
    name: Code Quality
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: backend/package.json
    
    - name: Install backend dependencies
      working-directory: backend
      run: npm ci
    
    - name: Run backend test coverage
      working-directory: backend
      run: npm run test:coverage
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      if: always()
      with:
        files: ./backend/coverage/lcov.info
        fail_ci_if_error: false